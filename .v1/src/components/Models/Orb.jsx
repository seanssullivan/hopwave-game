/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: rayBLAST (https://sketchfab.com/rayblaster)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/orb-hovering-d056f6654d494b4f8cdc7c52aabcac23
title: Orb Hovering
*/

import * as THREE from "three";
import React, { useRef, useState, useEffect } from "react";
import { useLoader, useFrame } from "react-three-fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import useMovement from "../../hooks/useMovement";
import useReposition from "../../hooks/useReposition";

export default function Model(props) {
  const group = useRef();

  const move = useMovement(group, "z");
  const reposition = useReposition(group);

  useFrame(() => {
    move(5);
    console.log(group);
    if (group.current.position.z <= -200) {
      const z = 100 * (7 - 1) - Math.abs(-200 - group.current.position.z);
      reposition({ z });
    }
  });

  const { nodes, materials, animations } = useLoader(
    GLTFLoader,
    "Orb/scene.gltf"
  );

  const [mixer] = useState(() => new THREE.AnimationMixer());
  useFrame((state, delta) => mixer.update(delta));
  useEffect(
    () => void mixer.clipAction(animations[0], group.current).play(),
    []
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 10, 158.42]} scale={[10, 10, 10]}>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh
              material={materials.orb_mat}
              geometry={nodes.mesh_0.geometry}
            />
          </group>
        </group>
      </group>
    </group>
  );
}
